# üìã ESQUEMA FINAL-FINAL UROVITAL (VERSI√ìN OFICIAL CON PAGO OBLIGATORIO)

## üéØ **VERSI√ìN DEFINITIVA: PAGO OBLIGATORIO SIEMPRE**

Sistema optimizado a **16 TABLAS** con flujo directo: **NO CITAS SIN PAGO CONFIRMADO**. Eliminaci√≥n total de estados intermedios y complejidades innecesarias.

---

## üìä **RESUMEN DE CAMBIOS APLICADOS**

### **CAMBIO CR√çTICO**: 
- ‚ùå **Eliminado**: `SCHEDULED_UNPAID` (no queremos citas sin pago)
- ‚ùå **Eliminado**: Estados intermedios de pago
- ‚úÖ **Nuevo flujo**: Pago inmediato ‚Üí Cita creada ‚Üí Solo citas pagadas existen

### **CONTEO FINAL**: 16 TABLAS
- **Eliminadas**: 4 tablas (notifications, analytics_cache, document_types, prescriptions)
- **Agregada**: 1 tabla (referrals)
- **Resultado**: Sistema simplificado con pago obligatorio

---

## üóÑÔ∏è **ESTRUCTURA FINAL COMPLETA (16 TABLAS)**

### **GRUPO 1: TABLAS SIN MODIFICACIONES (6 tablas)**

#### **1. doctor_specialties**
**ESTADO**: Sin cambios
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `doctor_id` (BIGINT REFERENCES doctors(id))
- `specialty_id` (BIGINT REFERENCES specialties(id))
- `is_primary` (BOOLEAN DEFAULT FALSE)
- `certification_date` (DATE)
- `created_at`, `updated_at` (TIMESTAMP)

#### **2. medical_attachments**
**ESTADO**: Sin cambios - incluye recetas subidas por pacientes
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `patient_id` (BIGINT REFERENCES patients(id))
- `medical_record_id` (BIGINT REFERENCES medical_records(id))
- `file_name` (VARCHAR(255))
- `file_path` (VARCHAR(500))
- `file_size` (BIGINT)
- `file_type` (VARCHAR(20)) - PDF, IMAGE, DOCUMENT
- `content_type` (VARCHAR(100))
- `upload_date` (TIMESTAMP)
- `upload_source` (VARCHAR(20)) - DOCTOR, PATIENT, SYSTEM
- `description` (TEXT)
- `is_public` (BOOLEAN DEFAULT FALSE)
- `created_at`, `updated_at` (TIMESTAMP)
- `created_by`, `updated_by` (VARCHAR(100))

#### **3. hospital_settings**
**ESTADO**: Sin cambios estructurales
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `setting_key` (VARCHAR(100) UNIQUE)
- `setting_value` (TEXT)
- `data_type` (VARCHAR(20)) - STRING, INTEGER, BOOLEAN, JSON
- `description` (VARCHAR(255))
- `category` (VARCHAR(100))
- `is_public` (BOOLEAN)
- `is_editable` (BOOLEAN)
- `created_at`, `updated_at` (TIMESTAMP)
- `created_by`, `updated_by` (VARCHAR(100))

#### **4. chatbot_knowledge_base**
**ESTADO**: Sin cambios
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `topic` (VARCHAR(255))
- `question` (VARCHAR(500))
- `answer` (TEXT)
- `keywords` (VARCHAR(500))
- `is_active` (BOOLEAN DEFAULT TRUE)
- `priority` (INTEGER DEFAULT 5)
- `category` (VARCHAR(100))
- `usage_count` (INTEGER DEFAULT 0)
- `success_rate` (DECIMAL DEFAULT 0.0)
- `created_at`, `updated_at` (TIMESTAMP)
- `created_by`, `updated_by` (VARCHAR(100))

#### **5. chatbot_conversations**
**ESTADO**: Sin cambios
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `user_id` (BIGINT REFERENCES users(id))
- `session_id` (VARCHAR(100))
- `query` (TEXT)
- `response` (TEXT)
- `is_successful` (BOOLEAN DEFAULT TRUE)
- `feedback_rating` (INTEGER)
- `ip_address` (VARCHAR(50))
- `created_at`, `updated_at` (TIMESTAMP)

#### **6. doctor_availability**
**ESTADO**: Concepto de bloques definido
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `doctor_id` (BIGINT REFERENCES doctors(id))
- `day_of_week` (SMALLINT) - 1=lunes, 7=domingo
- `time_block` (VARCHAR(20)) - MORNING, AFTERNOON, FULL_DAY
- `max_patients` (INTEGER DEFAULT 20)
- `is_available` (BOOLEAN DEFAULT TRUE)
- `created_at`, `updated_at` (TIMESTAMP)

---

### **GRUPO 2: TABLAS CON MODIFICACIONES MENORES (7 tablas)**

#### **7. users**
**ESTADO**: Simplificado seg√∫n revisi√≥n
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `email` (VARCHAR(150) UNIQUE)
- `password_hash` (VARCHAR(255))
- `role` (VARCHAR(30)) - PATIENT, DOCTOR, SPECIALIST, RECEPTIONIST, ADMIN
- `is_active` (BOOLEAN DEFAULT TRUE)
- `last_login` (TIMESTAMP)
- `created_at`, `updated_at` (TIMESTAMP)

**ROLES FINALES**:
- **PATIENT** - Pacientes del centro
- **DOCTOR** - Dr. Mario (ur√≥logo principal)
- **SPECIALIST** - Doctores bajo demanda
- **RECEPTIONIST** - Personal registro/pago
- **ADMIN** - Administradores

#### **8. patients**
**ESTADO**: Simplificado - solo DNI directo
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `user_id` (BIGINT REFERENCES users(id))
- `document_number` (VARCHAR(12) UNIQUE) - Solo DNI (8 d√≠gitos)
- `first_name` (VARCHAR(100))
- `last_name` (VARCHAR(100))
- `second_last_name` (VARCHAR(100))
- `birth_date` (DATE)
- `gender` (VARCHAR(10)) - MALE, FEMALE, OTHER
- `blood_type` (VARCHAR(10))
- `phone` (VARCHAR(20))
- `address` (TEXT)
- `emergency_contact_name` (VARCHAR(200))
- `emergency_contact_phone` (VARCHAR(20))
- `allergies` (TEXT)
- `reniec_verified` (BOOLEAN DEFAULT FALSE)
- `created_at`, `updated_at` (TIMESTAMP)

#### **9. doctors**
**ESTADO**: Categorizaci√≥n para modelo Urovital
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `user_id` (BIGINT REFERENCES users(id))
- `cmp_number` (VARCHAR(15) UNIQUE)
- `first_name` (VARCHAR(100))
- `last_name` (VARCHAR(100))
- `second_last_name` (VARCHAR(100))
- `phone` (VARCHAR(20))
- `consultation_room` (VARCHAR(10))
- `is_active` (BOOLEAN DEFAULT TRUE)
- `hire_date` (DATE)
- `profile_image` (VARCHAR(255))
- `doctor_type` (VARCHAR(20) DEFAULT 'SPECIALIST') - PRIMARY, SPECIALIST
- `is_external` (BOOLEAN DEFAULT FALSE)
- `can_refer` (BOOLEAN DEFAULT FALSE)
- `contact_phone` (VARCHAR(20))
- `created_at`, `updated_at` (TIMESTAMP)

#### **10. specialties**
**ESTADO**: Categorizaci√≥n espec√≠fica Urovital
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `name` (VARCHAR(100))
- `description` (TEXT)
- `consultation_price` (DECIMAL(10,2))
- `discount_percentage` (DECIMAL(5,2) DEFAULT 0.00)
- `average_duration` (INTEGER DEFAULT 30)
- `is_active` (BOOLEAN DEFAULT TRUE)
- `is_primary` (BOOLEAN DEFAULT FALSE) - Solo urolog√≠a
- `requires_referral` (BOOLEAN DEFAULT FALSE) - Especialidades bajo demanda
- `created_at`, `updated_at` (TIMESTAMP)

#### **11. payment_methods**
**ESTADO**: M√©todos locales peruanos
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `name` (VARCHAR(50)) - "Efectivo", "Yape", "Plin"
- `type` (VARCHAR(20)) - CASH, DIGITAL, CARD
- `processing_fee` (DECIMAL(5,2) DEFAULT 0.00)
- `integration_code` (VARCHAR(100))
- `is_active` (BOOLEAN DEFAULT TRUE)
- `requires_manual_validation` (BOOLEAN DEFAULT FALSE)
- `is_digital` (BOOLEAN DEFAULT FALSE)
- `created_at`, `updated_at` (TIMESTAMP)

#### **12. medical_records**
**ESTADO**: Mantiene campos para derivaciones
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `patient_id` (BIGINT REFERENCES patients(id))
- `doctor_id` (BIGINT REFERENCES doctors(id))
- `appointment_id` (BIGINT REFERENCES appointments(id))
- `record_date` (TIMESTAMP)
- `chief_complaint` (TEXT)
- `symptoms` (TEXT)
- `diagnosis` (TEXT)
- `treatment_plan` (TEXT)
- `notes` (TEXT)
- `followup_required` (BOOLEAN DEFAULT FALSE)
- `followup_date` (TIMESTAMP)
- `severity` (VARCHAR(20)) - LOW, MEDIUM, HIGH, CRITICAL
- `height_cm` (DOUBLE PRECISION)
- `weight_kg` (DOUBLE PRECISION)
- `blood_pressure` (VARCHAR(20))
- `temperature` (DOUBLE PRECISION)
- `heart_rate` (INTEGER)
- `respiratory_rate` (INTEGER)
- `oxygen_saturation` (INTEGER)
- `allergies` (TEXT)
- `is_referral_record` (BOOLEAN DEFAULT FALSE)
- `referral_notes` (TEXT)
- `created_at`, `updated_at` (TIMESTAMP)
- `created_by`, `updated_by` (VARCHAR(100))

#### **13. audit_logs**
**ESTADO**: Campos simplificados
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `user_id` (BIGINT)
- `username` (VARCHAR(100))
- `operation_type` (VARCHAR(20)) - CREATE, READ, UPDATE, DELETE, LOGIN
- `entity_name` (VARCHAR(100))
- `entity_id` (BIGINT)
- `description` (TEXT) - Generado autom√°ticamente por backend
- `request_url` (VARCHAR(255))
- `request_method` (VARCHAR(10))
- `old_value` (TEXT)
- `new_value` (TEXT)
- `status` (BOOLEAN DEFAULT TRUE)
- `error_message` (TEXT)
- `session_id` (VARCHAR(100))
- `created_at`, `updated_at` (TIMESTAMP)

---

### **GRUPO 3: TABLAS CON MODIFICACIONES IMPORTANTES (2 tablas)**

#### **14. payments**
**ESTADO**: CR√çTICO - Estados simplificados para pago obligatorio
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `appointment_id` (BIGINT UNIQUE REFERENCES appointments(id))
- `payment_method_id` (BIGINT REFERENCES payment_methods(id))
- `amount` (DECIMAL(10,2))
- `processing_fee` (DECIMAL(10,2))
- `total_amount` (DECIMAL(10,2))
- `transaction_reference` (VARCHAR(100))
- `payment_date` (TIMESTAMP)
- `status` (VARCHAR(20)) - **SOLO: PROCESSING, COMPLETED, FAILED, REFUNDED**
- `receipt_number` (VARCHAR(50))
- `payer_name` (VARCHAR(150))
- `payer_email` (VARCHAR(150))
- `requires_validation` (BOOLEAN DEFAULT FALSE)
- `validated_by_user_id` (BIGINT REFERENCES users(id))
- `created_at`, `updated_at` (TIMESTAMP)

**ESTADOS PAYMENT FINALES**:
- **PROCESSING** - En proceso de validaci√≥n (tarjeta/Yape/Plin)
- **COMPLETED** - Pago confirmado (appointment se crea autom√°ticamente)
- **FAILED** - Pago fall√≥ (NO se crea appointment)
- **REFUNDED** - Devuelto por cancelaci√≥n

**L√ìGICA CR√çTICA**: Solo se crea `appointment` cuando `payment.status = COMPLETED`

#### **15. appointments**
**ESTADO**: RADICAL - Solo citas pagadas, estados simplificados
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `patient_id` (BIGINT REFERENCES patients(id))
- `doctor_id` (BIGINT REFERENCES doctors(id))
- `specialty_id` (BIGINT REFERENCES specialties(id))
- `appointment_date` (DATE)
- `time_block` (VARCHAR(20)) - MORNING, AFTERNOON
- `reason` (TEXT)
- `status` (VARCHAR(20)) - **SOLO: SCHEDULED, IN_CONSULTATION, COMPLETED, CANCELLED, NO_SHOW**
- `created_at`, `updated_at` (TIMESTAMP)

**ESTADOS APPOINTMENT FINALES**:
- **SCHEDULED** - Cita confirmada (YA PAGADA - es redundante especificar)
- **IN_CONSULTATION** - Paciente con doctor actualmente
- **COMPLETED** - Consulta terminada
- **CANCELLED** - Cita cancelada (con reembolso)
- **NO_SHOW** - Paciente no lleg√≥

**CAMPOS ELIMINADOS**:
- ‚ùå `start_time` - Solo bloques amplios
- ‚ùå `notes` - Innecesario
- ‚ùå `price` - Se calcula desde specialty
- ‚ùå `payment_status` - Redundante (si existe appointment = ya pag√≥)

**L√ìGICA CR√çTICA**: 
- **appointment solo existe si payment.status = COMPLETED**
- **Precio autom√°tico desde specialty.consultation_price**
- **Transacci√≥n at√≥mica: payment + appointment juntos**

---

### **GRUPO 4: TABLA NUEVA (1 tabla)**

#### **16. referrals**
**ESTADO**: Nueva tabla para derivaciones internas
**CAMPOS**:
- `id` (BIGSERIAL PRIMARY KEY)
- `patient_id` (BIGINT REFERENCES patients(id))
- `referring_doctor_id` (BIGINT REFERENCES doctors(id))
- `target_specialty_id` (BIGINT REFERENCES specialties(id))
- `original_appointment_id` (BIGINT REFERENCES appointments(id)) - Cita que origina derivaci√≥n
- `new_appointment_id` (BIGINT REFERENCES appointments(id)) - Cita creada con especialista
- `reason` (TEXT)
- `status` (VARCHAR(20)) - REQUESTED, SCHEDULED, COMPLETED, CANCELLED
- `scheduled_at` (TIMESTAMP) - Cu√°ndo se program√≥ con especialista
- `created_at`, `updated_at` (TIMESTAMP)

**ESTADOS REFERRAL**:
- **REQUESTED** - Dr. Mario solicita especialista
- **SCHEDULED** - Recepcionista coordin√≥ y agend√≥ con especialista
- **COMPLETED** - Paciente fue atendido por especialista
- **CANCELLED** - Derivaci√≥n cancelada

---

## üîÑ **FLUJO OPERACIONAL FINAL**

### **FLUJO 1: CITA ONLINE (WEB/M√ìVIL) - PAGO OBLIGATORIO**

#### **PROCESO AT√ìMICO**:
```
1. Paciente selecciona: especialidad + fecha + bloque
2. Sistema muestra precio autom√°tico (desde specialty.consultation_price)
3. Paciente DEBE pagar inmediatamente:
   - Yape/Plin: Sube comprobante ‚Üí validates_manual_validation=true
   - Tarjeta: Proceso autom√°tico ‚Üí payment.status=COMPLETED
4. Solo SI payment.status=COMPLETED:
   - Se crea appointment con status=SCHEDULED
   - Transacci√≥n at√≥mica garantizada
5. Si payment.status=FAILED:
   - NO se crea appointment
   - Usuario puede reintentar
```

### **FLUJO 2: CITA PRESENCIAL - PAGO DIRECTO**

#### **PROCESO INMEDIATO**:
```
1. Paciente llega ‚Üí Recepcionista registra
2. Selecciona bloque disponible
3. Paciente paga inmediatamente (efectivo/Yape/Plin)
4. Recepcionista marca payment.status=COMPLETED
5. appointment se crea autom√°ticamente con status=SCHEDULED
6. Paciente entra a sala de espera
```

### **FLUJO 3: DERIVACI√ìN INTERNA**

#### **PROCESO DE ESPECIALISTAS**:
```
1. Dr. Mario completa consulta ‚Üí appointment.status=COMPLETED
2. Si necesita especialista ‚Üí Crea referral:
   - original_appointment_id = cita actual
   - target_specialty_id = especialidad requerida
   - status = REQUESTED
3. Recepcionista ve "Derivaciones Pendientes"
4. Contacta especialista ‚Üí Coordina fecha
5. Crea nueva cita con especialista:
   - appointment_type = REFERRAL
   - Paciente DEBE pagar cuando venga
6. Actualiza referral:
   - new_appointment_id = nueva cita
   - status = SCHEDULED
```

---

## üîó **RELACIONES Y VALIDACIONES CR√çTICAS**

### **VALIDACI√ìN 1: NO APPOINTMENT SIN PAYMENT COMPLETED**
```
Constraint: appointment solo se crea si existe payment.status=COMPLETED
Implementaci√≥n: Transacci√≥n at√≥mica en base de datos
Trigger: Verificar payment antes de INSERT appointment
```

### **VALIDACI√ìN 2: CAPACIDAD ANTES DE PAGO**
```
Verificar doctor_availability.max_patients ANTES de procesar pago
Si bloque lleno ‚Üí Error antes del pago
Si pago exitoso ‚Üí appointment garantizado (capacidad reservada)
```

### **VALIDACI√ìN 3: PRECIO AUTOM√ÅTICO**
```
appointment.price se calcula desde specialty.consultation_price
NO almacenar price en appointment (fuente √∫nica de verdad)
Mostrar en frontend pero calcular din√°micamente
```

### **VALIDACI√ìN 4: RELACI√ìN 1:1 PAYMENT-APPOINTMENT**
```
Cada payment.status=COMPLETED tiene exactamente un appointment
Cada appointment tiene exactamente un payment.status=COMPLETED
Constraint UNIQUE en ambas tablas
```

---

## üìä **CONFIGURACI√ìN INICIAL UROVITAL**

### **Especialidades**:
```sql
Urolog√≠a: is_primary=true, requires_referral=false, consultation_price=150.00
Medicina Interna: is_primary=false, requires_referral=true, consultation_price=120.00
Ginecolog√≠a: is_primary=false, requires_referral=true, consultation_price=130.00
Gastroenterolog√≠a: is_primary=false, requires_referral=true, consultation_price=140.00
Nefrolog√≠a: is_primary=false, requires_referral=true, consultation_price=135.00
```

### **M√©todos de Pago**:
```sql
Efectivo: type=CASH, requires_manual_validation=true, processing_fee=0.00
Yape: type=DIGITAL, requires_manual_validation=true, processing_fee=0.00
Plin: type=DIGITAL, requires_manual_validation=true, processing_fee=0.00
Tarjeta Cr√©dito: type=CARD, requires_manual_validation=false, processing_fee=3.50
Tarjeta D√©bito: type=CARD, requires_manual_validation=false, processing_fee=2.00
```

### **Doctores**:
```sql
Dr. Mario: doctor_type=PRIMARY, can_refer=true, is_external=false
Dra. Milagros: doctor_type=SPECIALIST, can_refer=false, is_external=true
Dra. Mayra: doctor_type=SPECIALIST, can_refer=false, is_external=true
```

### **Hospital Settings**:
```sql
morning_block_start=07:00
morning_block_end=13:00
afternoon_block_start=16:00
afternoon_block_end=20:00
max_patients_morning=20
max_patients_afternoon=25
payment_required_before_consultation=true
appointment_warning_message="Las citas se atienden por orden de llegada en el horario seleccionado"
```

---

## üéØ **BENEFICIOS DEL ESQUEMA FINAL**

### **1. Simplicidad Operacional**:
- ‚úÖ **Solo citas pagadas** existen en el sistema
- ‚úÖ **No estados intermedios** confusos
- ‚úÖ **Flujo directo**: Pago ‚Üí Cita ‚Üí Atenci√≥n

### **2. Integridad Garantizada**:
- ‚úÖ **Transacci√≥n at√≥mica**: Payment + Appointment juntos
- ‚úÖ **No inconsistencias**: Imposible tener cita sin pago
- ‚úÖ **Capacidad controlada**: Solo se reserva si pago exitoso

### **3. Experiencia Clara**:
- ‚úÖ **Usuario web**: Pago inmediato ‚Üí Confirmaci√≥n inmediata
- ‚úÖ **Recepcionista**: Ve solo citas 100% v√°lidas
- ‚úÖ **Doctor**: Atiende solo pacientes pagados

### **4. Mantenibilidad**:
- ‚úÖ **L√≥gica simple**: Sin validaciones complejas de "¬øya pag√≥?"
- ‚úÖ **Estados claros**: SCHEDULED = Ya pag√≥ y puede ser atendido
- ‚úÖ **Auditor√≠a clara**: Cada acci√≥n tiene un prop√≥sito espec√≠fico

---

## üìã **RESUMEN EJECUTIVO FINAL**

### **ESQUEMA DEFINITIVO**:
- **16 TABLAS** optimizadas para Centro M√©dico Urovital
- **PAGO OBLIGATORIO** para todas las citas
- **NO ESTADOS INTERMEDIOS** de pago
- **FLUJO DIRECTO**: Selecciona ‚Üí Paga ‚Üí Cita confirmada

### **REGLA DE ORO**:
**"SI EXISTE APPOINTMENT = YA PAG√ì"**

**Este es el esquema final definitivo que refleja exactamente el modelo de negocio de Centro M√©dico Urovital con pago obligatorio inmediato.**