package com.hospital.backend.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.servers.Server;
import org.springdoc.core.models.GroupedOpenApi;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {

    @Bean
    OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("Hospital Management System API")
                        .description("""
                                **Sistema Integral de Gesti√≥n Hospitalaria**
                                
                                API REST moderna para la gesti√≥n completa de operaciones hospitalarias, 
                                incluyendo autenticaci√≥n, gesti√≥n de usuarios, citas m√©dicas, historiales 
                                cl√≠nicos, pagos y anal√≠tica avanzada.
                                
                                **üîê Autenticaci√≥n:** Para probar los endpoints, autent√≠quese primero en el grupo 
                                "Autenticaci√≥n" usando `POST /auth/login` y luego use el bot√≥n "Authorize" 
                                con el token JWT obtenido.
                                """)
                        .version("2.0.0")
                        .contact(new Contact()
                                .name("Hospital API Team")
                                .email("dev@hospital.pe")))
                .servers(List.of(
                        new Server()
                                .url("http://localhost:8080/api")
                                .description("Servidor de Desarrollo")))
                .components(new Components()
                        .addSecuritySchemes("JWT Authentication",
                                new SecurityScheme()
                                        .type(SecurityScheme.Type.HTTP)
                                        .scheme("bearer")
                                        .bearerFormat("JWT")
                                        .description("Token JWT. Formato: Bearer {token}")))
                .addSecurityItem(new SecurityRequirement().addList("JWT Authentication"));
    }

    // ORDEN CONTROLADO: "Todas las APIs" primero con prefijo 01
    @Bean
    GroupedOpenApi allApisApi() {
        return GroupedOpenApi.builder()
                .group("01-all")
                .displayName("üåê Todas las APIs")
                .pathsToMatch("/**")
                .pathsToExclude("/actuator/**") // Excluir endpoints internos de Actuator
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Hospital Management System API")
                            .description("""
                                    **Sistema de Gesti√≥n Hospitalaria**
                                    
                                    API REST para operaciones hospitalarias completas.
                                    
                                    **üîë Autenticaci√≥n:** Use `/auth/login` ‚Üí Bot√≥n "Authorize" ‚Üí `Bearer {token}`
                                    
                                    **üìä Monitoreo:** Grupo "Monitoreo y M√©tricas" para health checks y m√©tricas del sistema
                                    """)
                            .version("2.0.0")
                            .contact(new Contact()
                                    .name("Hospital API Team")
                                    .email("dev@hospital.pe")));
                })
                .build();
    }

    @Bean
    GroupedOpenApi authenticationApi() {
        return GroupedOpenApi.builder()
                .group("02-authentication")
                .displayName("üîê Autenticaci√≥n y Sesiones")
                .pathsToMatch("/auth/**")
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Sistema de Autenticaci√≥n JWT")
                            .description("""
                                    **Autenticaci√≥n Segura con JWT**
                                    
                                    Sistema completo de autenticaci√≥n con tokens JWT:
                                    - Login y registro de usuarios
                                    - Validaci√≥n y renovaci√≥n de tokens
                                    - Gesti√≥n de perfiles y contrase√±as
                                    
                                    üîë **Para obtener token:** Use POST /auth/login
                                    """));
                })
                .build();
    }

    @Bean
    GroupedOpenApi usersApi() {
        return GroupedOpenApi.builder()
                .group("03-users")
                .displayName("üë• Pacientes y Doctores")
                .pathsToMatch("/patients/**", "/doctors/**")
                .build();
    }

    @Bean
    GroupedOpenApi appointmentsApi() {
        return GroupedOpenApi.builder()
                .group("04-appointments")
                .displayName("üìÖ Citas M√©dicas")
                .pathsToMatch("/appointments/**")
                .build();
    }

    @Bean
    GroupedOpenApi catalogsApi() {
        return GroupedOpenApi.builder()
                .group("05-catalogs")
                .displayName("üìã Cat√°logos y Referencias")
                .pathsToMatch("/specialties/**", "/document-types/**", "/payment-methods/**")
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Cat√°logos del Sistema")
                            .description("""
                                    **Referencias y Configuraciones**
                                    
                                    Cat√°logos b√°sicos del sistema:
                                    - üè• Especialidades m√©dicas con precios
                                    - üÜî Tipos de documento de identidad
                                    - üí≥ M√©todos de pago disponibles
                                    
                                    üåê **Acceso p√∫blico** - No requieren autenticaci√≥n
                                    """));
                })
                .build();
    }

    @Bean
    GroupedOpenApi medicalApi() {
        return GroupedOpenApi.builder()
                .group("06-medical")
                .displayName("üè• Historiales M√©dicos")
                .pathsToMatch("/medical-records/**", "/prescriptions/**", "/medical-attachments/**")
                .build();
    }

    @Bean
    GroupedOpenApi paymentsApi() {
        return GroupedOpenApi.builder()
                .group("07-payments")
                .displayName("üí∞ Facturaci√≥n y Pagos")
                .pathsToMatch("/payments/**")
                .build();
    }

    @Bean
    GroupedOpenApi notificationsApi() {
        return GroupedOpenApi.builder()
                .group("08-notifications")
                .displayName("üîî Notificaciones y Alertas")
                .pathsToMatch("/notifications/**")
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Sistema de Notificaciones")
                            .description("""
                                    **Comunicaciones del Hospital**
                                    
                                    Tipos de notificaciones:
                                    - üìß Recordatorios de citas por email
                                    - üîî Alertas del sistema
                                    - üì® Notificaciones masivas
                                    - üìà Estad√≠sticas de entrega
                                    """));
                })
                .build();
    }

    @Bean
    GroupedOpenApi chatbotApi() {
        return GroupedOpenApi.builder()
                .group("09-chatbot")
                .displayName("ü§ñ Asistente Virtual")
                .pathsToMatch("/chatbot/**")
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Chatbot Inteligente")
                            .description("""
                                    **Asistente Virtual del Hospital**
                                    
                                    Capacidades del chatbot:
                                    - ‚ùì Respuestas autom√°ticas a consultas
                                    - üìö Base de conocimientos configurable
                                    - üìä Historial de conversaciones
                                    - üëç Sistema de feedback
                                    
                                    üåê **Acceso p√∫blico** para consultas b√°sicas
                                    """));
                })
                .build();
    }

    @Bean
    GroupedOpenApi monitoringApi() {
        return GroupedOpenApi.builder()
                .group("10-monitoring")
                .displayName("üìä Monitoreo y M√©tricas")
                .pathsToMatch("/monitoring/**")
                .build();
    }

    @Bean
    GroupedOpenApi adminApi() {
        return GroupedOpenApi.builder()
                .group("11-admin")
                .displayName("‚öôÔ∏è Panel de Administraci√≥n")
                .pathsToMatch("/admin/**", "/analytics/**", "/audit/**")
                .addOpenApiCustomizer(openApi -> {
                    openApi.info(new Info()
                            .title("Administraci√≥n del Hospital")
                            .description("""
                                    **Panel de Control Administrativo**
                                    
                                    Herramientas de administraci√≥n:
                                    - üìà Dashboard con m√©tricas en tiempo real
                                    - üìÑ Auditor√≠a de acciones del sistema
                                    - üìä An√°lisis y reportes avanzados
                                    - ‚öôÔ∏è Configuraciones del hospital
                                    
                                    üîí **Solo ADMIN** - Requiere permisos de administrador
                                    """));
                })
                .build();
    }
}
