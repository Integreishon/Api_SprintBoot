package com.hospital.backend.admin.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.hospital.backend.admin.dto.DashboardResponse;
import com.hospital.backend.admin.service.DashboardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

/**
 * Controlador para el dashboard administrativo
 * Proporciona m√©tricas y estad√≠sticas del hospital
 */
@RestController
@RequestMapping("/admin/dashboard")
@RequiredArgsConstructor
@Slf4j
@Tag(name = "üìà Dashboard", description = "Panel administrativo con m√©tricas y estad√≠sticas del hospital.")
public class DashboardController {

    private final DashboardService dashboardService;
    
    /**
     * Obtiene todas las m√©tricas del dashboard administrativo
     * @return Respuesta con todas las m√©tricas del hospital
     */
    @GetMapping
    @PreAuthorize("hasRole('ADMIN')")
    @Operation(summary = "M√©tricas del dashboard", description = "Obtiene todas las estad√≠sticas principales del hospital")
    public ResponseEntity<DashboardResponse> getDashboardMetrics() {
        log.info("GET /api/dashboard - Obteniendo m√©tricas del dashboard");
        return ResponseEntity.ok(dashboardService.getDashboardMetrics());
    }
    
    /**
     * Actualiza y obtiene m√©tricas frescas del dashboard administrativo
     * Fuerza rec√°lculo de m√©tricas sin usar cach√©
     * @return Respuesta con todas las m√©tricas actualizadas
     */
    @GetMapping("/refresh")
    @PreAuthorize("hasRole('ADMIN')")
    @Operation(summary = "Actualizar m√©tricas", description = "Fuerza la actualizaci√≥n de todas las estad√≠sticas")
    public ResponseEntity<DashboardResponse> refreshDashboardMetrics() {
        log.info("GET /api/dashboard/refresh - Actualizando m√©tricas del dashboard");
        // En una implementaci√≥n real, aqu√≠ se forzar√≠a un rec√°lculo completo sin usar cach√©
        return ResponseEntity.ok(dashboardService.getDashboardMetrics());
    }
} 